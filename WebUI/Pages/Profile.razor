@page "/profile"
@using ConestogaInsidersClub.Data.Models;
@using ConestogaInsidersClub.Data.DataAccess;
@using ConestogaInsidersClub.Pages.ViewModels;
@using ConestogaInsidersClub.Data;

@inject IUserService userService;

<h1>Profile</h1>
<br />

@if (user == null)
{
    <h3>Loading...</h3>
}
else if (editMode != true)
{
    <table>
        <tr>
            <td><b>Username:</b></td>
            <td><span id="UserName">@user.UserName</span></td>
        </tr>
        <tr>
            <td><b>Full Name:</b></td>
            <td><span id="Full_Name">@user.FirstName @user.LastName</span></td>
        </tr>
        <tr>
            <td><b>Email:</b></td>
            <td><span id="Email">@user.Email</span></td>
        </tr>
        <tr>
            <td><b>BirthDay:</b></td>
            <td><span id="BirthDay">@user.BirthDay.ToLongDateString()</span></td>
        </tr>
        <tr>
            <td><b>Phone Number:</b></td>
            <td><span id="Phone_Number">@(user.PhoneNumber ?? "*Not set yet*")</span></td>
        </tr>
        <tr>
            <td><b>Gender:</b></td>
            <td><span id="Gender">@(user.Gender == null ? "*Not set yet*" : user.Gender)</span></td>
        </tr>
    </table>
    <button class="btn-primary rounded mt-2" @onclick="@FlipEditMode">Edit</button>
}
else
{
    <EditForm Model="@userViewModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <h3>Edit Information</h3>
        <br />
        <table>
            <tr>
                <td>UserName:</td>
                <td><InputText disabled="true" id="UserName_Edit" @bind-Value="userViewModel.UserName" /></td>
            </tr>
            <tr>
                <td>First Name:</td>
                <td><InputText id="First_Name_Edit" @bind-Value="userViewModel.FirstName" /></td>
            </tr>
            <tr>
                <td>Last Name:</td>
                <td><InputText id="Last_Name_Edit" @bind-Value="userViewModel.LastName" /></td>
            </tr>
            <tr>
                <td>Email:</td>
                <td><InputText id="Email_Edit" @bind-Value="userViewModel.Email" /></td>
            </tr>
            <tr>
                <td>BirthDay:</td>
                <td><InputDate id="BirthDay_Edit" @bind-Value="userViewModel.BirthDay" /></td>
            </tr>
            <tr>
                <td>Phone Number:</td>
                <td><InputText id="Phone_Number_Edit" @bind-Value="userViewModel.PhoneNumber" /></td>
            </tr>
            <tr>
                <td>Gender:</td>
                <td>
                    <InputSelect id="Gender_Edit" @bind-Value="userViewModel.GenderName">
                        @foreach (var gender in Enum.GetValues(typeof(Gender)))
                        {
                            <option value="@gender">@gender</option>
                        }
                    </InputSelect>
                </td>
            </tr>
        </table>
        <button class="btn-info rounded mt-2" type="submit">Save</button>
    </EditForm>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }
    private AuthenticationState authenticationState;
    private ApplicationUser user;
    private string userName;
    private UserVM userViewModel = new UserVM();
    private bool editMode = false;

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationState;
        user = await userService.GetUser(authenticationState.User.Identity.Name);
        userName = user.UserName;

        userViewModel = UserVM.ToViewModel(user);
    }

    private async void HandleValidSubmit()
    {
        ApplicationUser updatedUser = UserVM.ToModel(user, userViewModel);
        await userService.UpdateUser(updatedUser);
        FlipEditMode();
        StateHasChanged();

        if (userName != updatedUser.UserName)
        {
            @* TODO: Log out the user when the username is updated *@
        }
    }

    private void FlipEditMode()
    {
        editMode = !editMode;
    }
}
