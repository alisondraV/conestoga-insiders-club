@page "/profile"
@using ConestogaInsidersClub.Data.Models;
@using ConestogaInsidersClub.Data.DataAccess;
@using ConestogaInsidersClub.Pages.ViewModels;

@inject IUserService db;

<h1>Profile</h1>
<br />


@if (authenticationState == null || user == null)
{
    <h3>Loading...</h3>
}
else if (editMode != true)
{
    <table>
        <tr>
            <td width="100px"><b>Username:</b></td>
            <td><span id="UserName">@authenticationState.User.Identity.Name</span></td>
        </tr>
        <tr>
            <td width="100px"><b>Full Name:</b></td>
            <td><span id="Full_Name">@user.FirstName @user.LastName</span></td>
        </tr>
        <tr>
            <td width="100px"><b>Email:</b></td>
            <td><span id="Email">@user.Email</span></td>
        </tr>
        <tr>
            <td width="100px"><b>Birth Day:</b></td>
            <td><span id="Email">@user.BirthDay.ToShortTimeString()</span></td>
        </tr>
        <tr>
            <td width="100px"><b>Phone Number:</b></td>
            <td><span id="Email">@user.PhoneNumber</span></td>
        </tr>
        <tr>
            <td width="100px"><b>Address:</b></td>
            <td><span id="Email">@user.Address</span></td>
        </tr>
    </table>
    <button @onclick="@FlipEditMode">Edit</button>
}
else {
    <EditForm Model="@userViewModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <h3>Edit Information</h3>
        <br />
        <p>
            <label>
                UserName:
                <InputText id="UserName" @bind-Value="userViewModel.UserName" />
            </label>
        </p>
        <p>
            <label>
                First Name:
                <InputText id="First_Name" @bind-Value="userViewModel.FirstName" />
            </label>
        </p>
        <p>
            <label>
                Last Name:
                <InputText id="Last_Name" @bind-Value="userViewModel.LastName" />
            </label>
        </p>
        <p>
            <label>
                Email:
                <InputText id="Email" @bind-Value="userViewModel.Email" />
            </label>
        </p>
        <p>
            <label>
                BirthDay:
                <InputDate id="BirthDay" @bind-Value="userViewModel.BirthDay" />
            </label>
        </p>
        <p>
            <label>
                PhoneNumber:
                <InputText id="Phone_Number" @bind-Value="userViewModel.PhoneNumber" />
            </label>
        </p>
        <p>
            <label>
                Address:
                <InputText id="Address" @bind-Value="userViewModel.Address.ToString()" />
            </label>
        </p>
        <button type="submit">Save</button>
    </EditForm>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }
    private AuthenticationState authenticationState;
    private ApplicationUser user;
    private UserVM userViewModel = new UserVM();
    private bool editMode = false;

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationState;
        user = await db.GetUser(authenticationState.User.Identity.Name);

        userViewModel = UserVM.ToViewModel(user);
    }

    private async void HandleValidSubmit()
    {
        ApplicationUser updatedUser = UserVM.ToModel(userViewModel);
        updatedUser.Id = user.Id; // TODO: investigate if all other fields will be deleted
        await db.UpdateUser(updatedUser);
        FlipEditMode();
    }

    private void FlipEditMode()
    {
        editMode = !editMode;
    }
}
