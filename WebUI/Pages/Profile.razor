@page "/profile"
@using ConestogaInsidersClub.Data.Models;
@using ConestogaInsidersClub.Data.DataAccess;

@inject IUserService db;

<h1>Profile</h1>
<br />


@if (authenticationState == null || user == null)
{
    <h3>Loading...</h3>
}
else
{
    <table>
        <tr>
            <td width="100px"><b>Username:</b></td>
            <td><span id="UserName">@authenticationState.User.Identity.Name</span></td>
        </tr>
        <tr>
            <td width="100px"><b>Full Name:</b></td>
            <td><span id="Full_Name">@user.FirstName @user.LastName</span></td>
        </tr>
        <tr>
            <td width="100px"><b>Email:</b></td>
            <td><span id="Email">@user.Email</span></td>
        </tr>
    </table>

    <EditForm OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <h3>Edit Information</h3>
        <InputText id="First_Name" @bind-Value="user.FirstName" />
        <InputText id="Last_Name" @bind-Value="user.LastName" />
        <InputText id="UserName" @bind-Value="user.UserName" />
        <InputText id="Email" @bind-Value="user.Email" />
        <InputText id="Phone_Number" @bind-Value="user.PhoneNumber" />

        <button type="submit">Save</button>
    </EditForm>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }
    private AuthenticationState authenticationState;
    private ApplicationUser user;

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationState;
        user = await db.GetUser(authenticationState.User.Identity.Name);
    }

    private async void HandleValidSubmit()
    {
        // await db.UpdateUser(user);
    }
}
