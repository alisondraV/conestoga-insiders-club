@page "/settings"
@using ConestogaInsidersClub.Data.Models;
@using ConestogaInsidersClub.Data.DataAccess;
@using ConestogaInsidersClub.Pages.ViewModels;

@inject IUserService users;
@inject IPreferenceService preferences;

<h1>Settings</h1>
<br />
<EditForm Model="@preferenceViewModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3>Edit Preferences</h3>
    <br />
    <p>
        <label>
            Your favourite genre:
            <InputText id="Genre" @bind-Value="preferenceViewModel.Genre" />
        </label>
    </p>
    <p>
        <label>
            Your favourite platform:
            <InputText id="Platform" @bind-Value="preferenceViewModel.Platform" />
        </label>
    </p>
    <p>
        <label>
            Do you wish to recieve promotions?
            <InputCheckbox id="RecievePromotions" @bind-Value="preferenceViewModel.ReceivePromotionalEmails" />
        </label>
    </p>

    <button type="submit">Save</button>
</EditForm>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }
    private AuthenticationState authenticationState;
    private ApplicationUser user;
    private Preference preference;
    private PreferenceVM preferenceViewModel = new PreferenceVM();

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationState;
        user = await users.GetUser(authenticationState.User.Identity.Name);
        preference = await preferences.GetPreference(user.Id);

        preferenceViewModel = PreferenceVM.ToViewModel(preference);
    }

    private async void HandleValidSubmit()
    {
        Preference updatedPreference = PreferenceVM.ToModel(preference, preferenceViewModel);
        updatedPreference.UserId = preference.UserId;
        await preferences.UpdatePreference(updatedPreference);
    }
}
