@page "/manage-orders"
@layout DashboardLayout
@using ConestogaInsidersClub.Data;
@using ConestogaInsidersClub.Data.Models;
@using ConestogaInsidersClub.Data.DataAccess;

@inject IOrderService orderService;

<h1>Manage Orders</h1>

@if(orders == null)
{
    <h3>Loading...</h3>
} 
else
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Username</th>
                <th scope="col"># of items</th>
                <th scope="col">Date Created</th>
                <th scope="col">Physical Copy Required</th>
                <th scope="col">Status</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
            <tr>
                <td scope="row">@order.OrderId</td>
                <td>@order.User.UserName</td>
                <td>@order.OrderItems.Count</td>
                <td>@GetCreatedAt(order)</td>
                <td>
                    @(PhysicalCopyRequired(order) ? "Yes" : "No")
                </td>
                <td>@order.OrderStatus.ToString()</td>
                <td>
                    @if (PhysicalCopyRequired(order) && order.OrderStatus == OrderStatus.Pending){
                        <button class="btn btn-primary" @onclick="() => MarkAsProcessed(order)">Mark as processed</button>
                    }
                </td>
            </tr>
            }    
        </tbody>
    </table>
}

@code {
    List<Order> orders;

    protected override async Task OnInitializedAsync()
    {
        orders = await orderService.GetOrders();
    }

    async Task MarkAsProcessed(Order order)
    {
        await orderService.MarkAsProcessed(order);
        StateHasChanged();
    }

    bool PhysicalCopyRequired(Order order)
    {
        return order.OrderType == OrderType.Physical;
    }

    string GetCreatedAt(Order order)
    {
        return $"{order.CreatedAt:dd MMM yyyy, hh:mm:ss tt}";
    }
}